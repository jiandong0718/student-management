server:
  port: 8080
  servlet:
    context-path: /api
  tomcat:
    max-threads: 200
    min-spare-threads: 20
    max-connections: 10000
    connection-timeout: 5000

spring:
  application:
    name: Student-Management
  # MySQL数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://prod-db-server:3306/user_service?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
    username: prod_user
    password: prod_password
    hikari:
      pool-name: HikariCP-Prod
      minimum-idle: 20
      maximum-pool-size: 50
      idle-timeout: 30000
      connection-timeout: 30000
      max-lifetime: 1800000
      leak-detection-threshold: 5000

  # MongoDB配置
  data:
    mongodb:
      uri: mongodb://prod-mongodb-server:27017/student_management_prod

  # Redis配置
  redis:
    host: prod-redis-server
    port: 6379
    database: 0
    password: prod_redis_password
    timeout: 10000
    lettuce:
      pool:
        max-active: 32
        max-wait: -1
        max-idle: 32
        min-idle: 8
  
  # 缓存配置
  cache:
    redis:
      time-to-live: 86400000 # 24小时，生产环境缓存时间较长

  # Kafka配置
  kafka:
    bootstrap-servers: prod-kafka-server:9092
    producer:
      retries: 3
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: student-management-prod-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  
  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB
  
  # MVC配置
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  
  # JWT配置
  jwt:
    secret: ${JWT_SECRET:prod-secure-key-for-jwt-token-authentication-should-be-very-long}
    expiration: 28800000 # 8小时
    token-prefix: Bearer
    header: Authorization
  
  # 跨域配置 - 生产环境限制来源
  cors:
    allowed-origins: "https://example.com,https://admin.example.com"
    allowed-methods: "GET,POST,PUT,DELETE"
    allowed-headers: "Authorization,Content-Type"
    allow-credentials: true
    max-age: 3600

# MyBatis Plus配置
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  type-aliases-package: com.example.studentManagement.entity,com.example.common.model
  configuration:
    map-underscore-to-camel-case: true
    # 生产环境不打印SQL日志
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl
  global-config:
    db-config:
      id-type: AUTO
      table-underline: true
    banner: false

# Actuator监控配置 - 生产环境限制暴露的端点
management:
  endpoints:
    web:
      exposure:
        include: "health,info"
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
    info:
      enabled: true
  # 生产环境需要认证才能访问
  security:
    enabled: true

# Swagger配置 - 生产环境可选择禁用
springfox:
  documentation:
    swagger:
      v2:
        path: /api-docs
  swagger:
    ui:
      enabled: false # 生产环境禁用Swagger UI

# 生产环境日志级别
logging:
  level:
    com.example.student-management: warn
    org.springframework: error
  # 生产环境日志文件配置
  file:
    name: /var/log/student-management/application.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30
